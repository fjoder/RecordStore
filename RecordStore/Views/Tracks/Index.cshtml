@model PaginatedList<RecordStore.Models.tracks>

@{
    ViewData["Title"] = "Index";
}

<h2>Tracks</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Composer
            </th>
            <th>
                UnitPrice
            </th>
            <th>
                Album
            </th>
            <th>
                Genre
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Composer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.album.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.genre.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.TrackId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.TrackId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.TrackId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-page="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-page="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>
